# Licensed under the MIT License
# https://github.com/craigahobbs/bare-script/blob/main/LICENSE

include '../app.bare'


# Test library
testBaredocLibrary = jsonStringify({ \
    'functions': [ \
        { \
            'name': 'func_c', \
            'group': 'A Group', \
            'doc': ['Test function C'] \
        }, \
        { \
            'name': 'func_a', \
            'group': 'A Group', \
            'doc': ['Test function A'], \
            'args': [ \
                {'name': 'arg1', 'doc': ['The first argument']}, \
                {'name': 'arg2', 'doc': ['The second argument']} \
            ], \
            'return': ['The return value'] \
        }, \
        { \
            'name': 'func_d', \
            'group': 'C Group', \
            'doc': ['Test function D'], \
            'args': [ \
                {'name': 'arg1', 'doc': ['The first argument']} \
            ] \
        }, \
        { \
            'name': 'func_e', \
            'group': 'C Group', \
            'doc': ['Test function E'], \
            'return': ['The return value'] \
        } \
    ] \
})


async function testBaredocMain_index():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    baredocMain('library.json', 'The Test Library')

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index')


async function testBaredocMain_single():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vSingle', true)
    baredocMain('library.json', 'The Test Library')
    systemGlobalSet('vSingle', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['markdownPrint', ['', '[Multi Page](#var=)']], \
        ['markdownPrint', ['','## Table of Contents','']], \
        ['markdownPrint', ['- [A Group](#var.vSingle=true&a-group)']], \
        ['markdownPrint', ['- [C Group](#var.vSingle=true&c-group)']], \
        ['markdownPrint', ['', '---', '']], \
        ['markdownPrint', ['## A Group']], \
        ['markdownPrint', ['', '[Back to top](#var.vSingle=true&_top)']], \
        ['markdownPrint', ['', '### Function Index', '']], \
        ['markdownPrint', ['- [func\\_a](#var.vSingle=true&func-a)']], \
        ['markdownPrint', ['- [func\\_c](#var.vSingle=true&func-c)']], \
        ['markdownPrint', ['', '---', '', '### func\\_a', '', ['Test function A']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '**arg2 -**', ['The second argument']]], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', ['The return value']]], \
        ['markdownPrint', ['', '---', '', '### func\\_c', '', ['Test function C']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '']], \
        ['markdownPrint', ['## C Group']], \
        ['markdownPrint', ['', '[Back to top](#var.vSingle=true&_top)']], \
        ['markdownPrint', ['', '### Function Index', '']], \
        ['markdownPrint', ['- [func\\_d](#var.vSingle=true&func-d)']], \
        ['markdownPrint', ['- [func\\_e](#var.vSingle=true&func-e)']], \
        ['markdownPrint', ['', '---', '', '### func\\_d', '', ['Test function D']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '', '### func\\_e', '', ['Test function E']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', ['The return value']]] \
    ])
endfunction
unittestRunTest('testBaredocMain_single')


async function testBaredocMain_single_menuLinks():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vSingle', true)
    baredocMain('library.json', 'The Test Library', [['Link _1_', 'page _1_.html'], ['Link _2_', 'page2.html']])
    systemGlobalSet('vSingle', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['[Link \\_1\\_](page%20_1_.html)']], \
        ['markdownPrint', ['&nbsp;|&nbsp;[Link \\_2\\_](page2.html)']], \
        ['markdownPrint', ['']], \
        ['markdownPrint', ['# The Test Library']], \
        ['markdownPrint', ['', '[Multi Page](#var=)']], \
        ['markdownPrint', ['','## Table of Contents','']], \
        ['markdownPrint', ['- [A Group](#var.vSingle=true&a-group)']], \
        ['markdownPrint', ['- [C Group](#var.vSingle=true&c-group)']], \
        ['markdownPrint', ['', '---', '']], \
        ['markdownPrint', ['## A Group']], \
        ['markdownPrint', ['', '[Back to top](#var.vSingle=true&_top)']], \
        ['markdownPrint', ['', '### Function Index', '']], \
        ['markdownPrint', ['- [func\\_a](#var.vSingle=true&func-a)']], \
        ['markdownPrint', ['- [func\\_c](#var.vSingle=true&func-c)']], \
        ['markdownPrint', ['', '---', '', '### func\\_a', '', ['Test function A']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '**arg2 -**', ['The second argument']]], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', ['The return value']]], \
        ['markdownPrint', ['', '---', '', '### func\\_c', '', ['Test function C']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '']], \
        ['markdownPrint', ['## C Group']], \
        ['markdownPrint', ['', '[Back to top](#var.vSingle=true&_top)']], \
        ['markdownPrint', ['', '### Function Index', '']], \
        ['markdownPrint', ['- [func\\_d](#var.vSingle=true&func-d)']], \
        ['markdownPrint', ['- [func\\_e](#var.vSingle=true&func-e)']], \
        ['markdownPrint', ['', '---', '', '### func\\_d', '', ['Test function D']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '', '### func\\_e', '', ['Test function E']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', ['The return value']]] \
    ])
endfunction
unittestRunTest('testBaredocMain_single_menuLinks')


async function testBaredocMain_single_index_content():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'library.json': testBaredocLibrary, \
            'index.md': 'This is the index.', \
            'testGroup.md': 'This is the group.' \
        } \
    })

    # Render the index
    systemGlobalSet('vSingle', true)
    baredocMain('library.json', 'The Test Library', null, {'': 'index.md', 'A Group': 'testGroup.md'})
    systemGlobalSet('vSingle', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['systemFetch', ['index.md']], \
        ['markdownPrint', ['', 'This is the index.']], \
        ['markdownPrint', ['', '[Multi Page](#var=)']], \
        ['markdownPrint', ['','## Table of Contents','']], \
        ['markdownPrint', ['- [A Group](#var.vSingle=true&a-group)']], \
        ['markdownPrint', ['- [C Group](#var.vSingle=true&c-group)']], \
        ['markdownPrint', ['', '---', '']], \
        ['markdownPrint', ['## A Group']], \
        ['markdownPrint', ['', '[Back to top](#var.vSingle=true&_top)']], \
        ['systemFetch', ['testGroup.md']], \
        ['markdownPrint', ['', 'This is the group.']], \
        ['markdownPrint', ['', '### Function Index', '']], \
        ['markdownPrint', ['- [func\\_a](#var.vSingle=true&func-a)']], \
        ['markdownPrint', ['- [func\\_c](#var.vSingle=true&func-c)']], \
        ['markdownPrint', ['', '---', '', '### func\\_a', '', ['Test function A']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '**arg2 -**', ['The second argument']]], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', ['The return value']]], \
        ['markdownPrint', ['', '---', '', '### func\\_c', '', ['Test function C']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '']], \
        ['markdownPrint', ['## C Group']], \
        ['markdownPrint', ['', '[Back to top](#var.vSingle=true&_top)']], \
        ['markdownPrint', ['', '### Function Index', '']], \
        ['markdownPrint', ['- [func\\_d](#var.vSingle=true&func-d)']], \
        ['markdownPrint', ['- [func\\_e](#var.vSingle=true&func-e)']], \
        ['markdownPrint', ['', '---', '', '### func\\_d', '', ['Test function D']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '', '### func\\_e', '', ['Test function E']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', ['The return value']]] \
    ])
endfunction
unittestRunTest('testBaredocMain_single_index_content')


async function testBaredocMain_publish():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vPublish', true)
    systemGlobalSet('vSingle', true)
    baredocMain('library.json', 'The Test Library')
    systemGlobalSet('vPublish', null)
    systemGlobalSet('vSingle', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['markdownPrint', ['','## Table of Contents','']], \
        ['markdownPrint', ['- [A Group](#var.vPublish=true&var.vSingle=true&a-group)']], \
        ['markdownPrint', ['- [C Group](#var.vPublish=true&var.vSingle=true&c-group)']], \
        ['markdownPrint', ['', '---', '']], \
        ['markdownPrint', ['## A Group']], \
        ['markdownPrint', ['', '[Back to top](#var.vPublish=true&var.vSingle=true&_top)']], \
        ['markdownPrint', ['', '### Function Index', '']], \
        ['markdownPrint', ['- [func\\_a](#var.vPublish=true&var.vSingle=true&func-a)']], \
        ['markdownPrint', ['- [func\\_c](#var.vPublish=true&var.vSingle=true&func-c)']], \
        ['markdownPrint', ['', '---', '', '### func\\_a', '', ['Test function A']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '**arg2 -**', ['The second argument']]], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', ['The return value']]], \
        ['markdownPrint', ['', '---', '', '### func\\_c', '', ['Test function C']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '']], \
        ['markdownPrint', ['## C Group']], \
        ['markdownPrint', ['', '[Back to top](#var.vPublish=true&var.vSingle=true&_top)']], \
        ['markdownPrint', ['', '### Function Index', '']], \
        ['markdownPrint', ['- [func\\_d](#var.vPublish=true&var.vSingle=true&func-d)']], \
        ['markdownPrint', ['- [func\\_e](#var.vPublish=true&var.vSingle=true&func-e)']], \
        ['markdownPrint', ['', '---', '', '### func\\_d', '', ['Test function D']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '', '### func\\_e', '', ['Test function E']]], \
        ['markdownPrint', ['', '#### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '#### Returns']], \
        ['markdownPrint', ['', ['The return value']]] \
    ])
endfunction
unittestRunTest('testBaredocMain_publish')


async function testBaredocMain_index_urlArray():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'library.json': testBaredocLibrary, \
            'library2.json': jsonStringify({ \
                'functions': [ \
                    { \
                        'name': 'funcB', \
                        'group': 'B Group', \
                        'doc': ['Test function B'] \
                    } \
                ] \
            }) \
        } \
    })

    # Render the index
    baredocMain(['library.json', 'library2.json'], 'The Test Library')

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json', 'library2.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [B Group](#var.vGroup='B%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_urlArray')


async function testBaredocMain_index_urlArrayMerge():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'library.json': testBaredocLibrary, \
            'library2.json': jsonStringify({ \
                'functions': [ \
                    { \
                        'name': 'funcB', \
                        'group': 'A Group', \
                        'doc': ['Test function A'] \
                    } \
                ] \
            }) \
        } \
    })

    # Render the index
    baredocMain(['library.json', 'library2.json'], 'The Test Library')

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json', 'library2.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_urlArrayMerge')


async function testBaredocMain_index_noTitle():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    baredocMain('library.json')

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['library.json']], \
        ['markdownPrint', ['# library.json']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_noTitle')


async function testBaredocMain_index_menuLinks():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    baredocMain('library.json', 'The Test Library', [['Link _1_', 'page _1_.html'], ['Link _2_', 'page2.html']])

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['[Link \\_1\\_](page%20_1_.html)']], \
        ["markdownPrint", ['&nbsp;|&nbsp;[Link \\_2\\_](page2.html)']], \
        ['markdownPrint', ['']], \
        ['markdownPrint', ['# The Test Library']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_menuLinks')


async function testBaredocMain_index_menuLinksOne():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    baredocMain('library.json', 'The Test Library', [['Link _1_', 'page _1_.html']])

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['[Link \\_1\\_](page%20_1_.html)']], \
        ['markdownPrint', ['']], \
        ['markdownPrint', ['# The Test Library']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_menuLinksOne')


async function testBaredocMain_index_content():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'library.json': testBaredocLibrary, \
            'index.md': 'This is the index.' \
        } \
    })

    # Render the index
    baredocMain('library.json', 'The Test Library', null, {'': 'index.md', 'A Group': 'testGroup.md'})

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['systemFetch', ['index.md']], \
        ['markdownPrint', ['', 'This is the index.']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_content')


async function testBaredocMain_index_content_fetch():
    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'library.json': testBaredocLibrary, \
            'libraryContent.json': '{"": "index.md", "A Group": "testGroup.md"}', \
            'index.md': 'This is the index.' \
        } \
    })

    # Render the index
    baredocMain('library.json', 'The Test Library', null, 'libraryContent.json')

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['systemFetch', ['libraryContent.json']], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['systemFetch', ['index.md']], \
        ['markdownPrint', ['', 'This is the index.']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_content_fetch')


async function testBaredocMain_index_contentEmpty():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    baredocMain('library.json', 'The Test Library', null, {'B Group': 'b.md'})

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [B Group](#var.vGroup='B%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_contentEmpty')


async function testBaredocMain_index_contentError():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    baredocMain('library.json', 'The Test Library', null, {'': 'index.md', 'A Group': 'testGroup.md'})

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library']], \
        ['markdownPrint', ['# The Test Library']], \
        ['systemFetch', ['index.md']], \
        ['markdownPrint', ['', '**Error:** Failed to load "index.md"']], \
        ['markdownPrint', ['', '[Single Page](#var.vSingle=true)']], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_contentError')


async function testBaredocMain_index_urlArgument():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vURL', 'library.json')
    baredocMain('other.json', 'The Other Library')
    systemGlobalSet('vURL', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['library.json']], \
        ['markdownPrint', ['# library.json']], \
        ['markdownPrint', ['', "[Single Page](#var.vSingle=true&var.vURL='library.json')"]], \
        ['markdownPrint', ['', '## Table of Contents', '']], \
        ['markdownPrint', ["- [A Group](#var.vGroup='A%20Group'&var.vURL='library.json'&_top)"]], \
        ['markdownPrint', ["- [C Group](#var.vGroup='C%20Group'&var.vURL='library.json'&_top)"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_urlArgument')


async function testBaredocMain_index_urlError():
    # Setup mocks
    unittestMockAll()

    # Render the index
    baredocMain('library.json', 'The Test Library')

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['markdownPrint', ['**Error:** Failed to fetch library documentation resource "library.json"']] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_urlError')


async function testBaredocMain_index_urlInvalid():
    systemLogDebug('NOTICE: The following "schemaValidate" error is expected:')

    # Setup mocks
    unittestMockAll({ \
        'systemFetch': { \
            'library.json': jsonStringify({ \
                'functions': [ \
                    { \
                        'name': 'func_a', \
                        'group': 'A Group' \
                    } \
                ] \
            }) \
        } \
    })

    # Render the index
    baredocMain('library.json', 'The Test Library')

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['markdownPrint', ['**Error:** Failed to fetch library documentation resource "library.json"']] \
    ])
endfunction
unittestRunTest('testBaredocMain_index_urlInvalid')


async function testBaredocMain_group():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vGroup', 'A Group')
    baredocMain('library.json', 'The Test Library')
    systemGlobalSet('vGroup', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library - A Group']], \
        ['markdownPrint', ['[Index](#var=)', '']], \
        ['markdownPrint', ['# A Group']], \
        ['markdownPrint', ['', '## Function Index', '']], \
        ['markdownPrint', ["- [func\\_a](#var.vGroup='A%20Group'&func-a)"]], \
        ['markdownPrint', ["- [func\\_c](#var.vGroup='A%20Group'&func-c)"]], \
        ['markdownPrint', ['', '---', '', '## func\\_a', '', ['Test function A']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '**arg2 -**', ['The second argument']]], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', ['The return value']]], \
        ['markdownPrint', ['', '---', '', '## func\\_c', '', ['Test function C']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', 'Nothing']] \
    ])
endfunction
unittestRunTest('testBaredocMain_group')


async function testBaredocMain_group_other():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vGroup', 'C Group')
    baredocMain('library.json', 'The Test Library')
    systemGlobalSet('vGroup', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library - C Group']], \
        ['markdownPrint', ['[Index](#var=)', '']], \
        ['markdownPrint', ['# C Group']], \
        ['markdownPrint', ['', '## Function Index', '']], \
        ['markdownPrint', ["- [func\\_d](#var.vGroup='C%20Group'&func-d)"]], \
        ['markdownPrint', ["- [func\\_e](#var.vGroup='C%20Group'&func-e)"]], \
        ['markdownPrint', ['', '---', '', '## func\\_d', '', ['Test function D']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '', '## func\\_e', '', ['Test function E']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', ['The return value']]] \
    ])
endfunction
unittestRunTest('testBaredocMain_group_other')


async function testBaredocMain_group_content():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary, 'c.md': 'These are the C functions.'}})

    # Render the index
    systemGlobalSet('vGroup', 'C Group')
    baredocMain('library.json', 'The Test Library', null, {'C Group': 'c.md'})
    systemGlobalSet('vGroup', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library - C Group']], \
        ['markdownPrint', ['[Index](#var=)', '']], \
        ['markdownPrint', ['# C Group']], \
        ['systemFetch', ['c.md']], \
        ['markdownPrint', ['', 'These are the C functions.']], \
        ['markdownPrint', ['', '## Function Index', '']], \
        ['markdownPrint', ["- [func\\_d](#var.vGroup='C%20Group'&func-d)"]], \
        ['markdownPrint', ["- [func\\_e](#var.vGroup='C%20Group'&func-e)"]], \
        ['markdownPrint', ['', '---', '', '## func\\_d', '', ['Test function D']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '', '## func\\_e', '', ['Test function E']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', ['The return value']]] \
    ])
endfunction
unittestRunTest('testBaredocMain_group_content')


async function testBaredocMain_group_contentError():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vGroup', 'C Group')
    baredocMain('library.json', 'The Test Library', null, {'C Group': 'c.md'})
    systemGlobalSet('vGroup', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library - C Group']], \
        ['markdownPrint', ['[Index](#var=)', '']], \
        ['markdownPrint', ['# C Group']], \
        ['systemFetch', ['c.md']], \
        ['markdownPrint', ['', '**Error:** Failed to load "c.md"']], \
        ['markdownPrint', ['', '## Function Index', '']], \
        ['markdownPrint', ["- [func\\_d](#var.vGroup='C%20Group'&func-d)"]], \
        ['markdownPrint', ["- [func\\_e](#var.vGroup='C%20Group'&func-e)"]], \
        ['markdownPrint', ['', '---', '', '## func\\_d', '', ['Test function D']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', 'Nothing']], \
        ['markdownPrint', ['', '---', '', '## func\\_e', '', ['Test function E']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', ['The return value']]] \
    ])
endfunction
unittestRunTest('testBaredocMain_group_contentError')


async function testBaredocMain_group_urlArgument():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vGroup', 'A Group')
    systemGlobalSet('vURL', 'library.json')
    baredocMain('other.json', 'The Test Library')
    systemGlobalSet('vGroup', null)
    systemGlobalSet('vURL', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['library.json - A Group']], \
        ['markdownPrint', ["[Index](#var.vURL='library.json')", '']], \
        ['markdownPrint', ['# A Group']], \
        ['markdownPrint', ['', '## Function Index', '']], \
        ['markdownPrint', ["- [func\\_a](#var.vGroup='A%20Group'&var.vURL='library.json'&func-a)"]], \
        ['markdownPrint', ["- [func\\_c](#var.vGroup='A%20Group'&var.vURL='library.json'&func-c)"]], \
        ['markdownPrint', ['', '---', '', '## func\\_a', '', ['Test function A']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', '**arg1 -**', ['The first argument']]], \
        ['markdownPrint', ['', '**arg2 -**', ['The second argument']]], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', ['The return value']]], \
        ['markdownPrint', ['', '---', '', '## func\\_c', '', ['Test function C']]], \
        ['markdownPrint', ['', '### Arguments']], \
        ['markdownPrint', ['', 'None']], \
        ['markdownPrint', ['', '### Returns']], \
        ['markdownPrint', ['', 'Nothing']] \
    ])
endfunction
unittestRunTest('testBaredocMain_group_urlArgument')


async function testBaredocMain_group_unknown():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vGroup', 'Unknown')
    baredocMain('library.json', 'The Test Library', null, {'C Group': 'c.md'})
    systemGlobalSet('vGroup', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['documentSetTitle', ['The Test Library - Unknown']], \
        ['markdownPrint', ['', '**Error:** Unknown group "Unknown"']] \
    ])
endfunction
unittestRunTest('testBaredocMain_group_unknown')


async function testBaredocMain_function():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vName', 'func_a')
    baredocMain('library.json', 'The Test Library')
    systemGlobalSet('vName', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['windowSetLocation', ["#var.vGroup='A%20Group'&func-a"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_function')


async function testBaredocMain_function_urlArgument():
    # Setup mocks
    unittestMockAll({'systemFetch': {'other.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vName', 'func_a')
    systemGlobalSet('vURL', 'other.json')
    baredocMain('library.json', 'The Test Library')
    systemGlobalSet('vName', null)
    systemGlobalSet('vURL', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['other.json']]], \
        ['windowSetLocation', ["#var.vGroup='A%20Group'&var.vURL='other.json'&func-a"]] \
    ])
endfunction
unittestRunTest('testBaredocMain_function_urlArgument')


async function testBaredocMain_function_unknown():
    # Setup mocks
    unittestMockAll({'systemFetch': {'library.json': testBaredocLibrary}})

    # Render the index
    systemGlobalSet('vName', 'unknownFunc')
    baredocMain('library.json', 'The Test Library')
    systemGlobalSet('vName', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['systemFetch', [['library.json']]], \
        ['markdownPrint', ['', '**Error:** Unknown function "unknownFunc"']] \
    ])
endfunction
unittestRunTest('testBaredocMain_function_unknown')


async function testBaredocMain_doc():
    # Setup mocks
    unittestMockAll()

    # Render the index
    systemGlobalSet('vDoc', 1)
    baredocMain('library.json', 'The Test Library')
    systemGlobalSet('vDoc', null)

    # Reset mocks
    unittestDeepEqual(unittestMockEnd(), [ \
        ['documentSetTitle', ['Library']], \
        ['elementModelRender', [ \
            [[{'html': 'h1', 'elem': {'text': 'struct Library'}}]] \
        ]] \
    ])
endfunction
unittestRunTest('testBaredocMain_doc')
